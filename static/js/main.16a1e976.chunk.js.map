{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Loader.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","div","Loader","role","aria-label","Title","span","Grid","Section","title","children","Text","color","Message","text","Image","prop","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","default","length","substring","Form","form","Input","input","SearchPresenter","movieResults","tvResults","loading","error","searchTerm","handleSubmit","updateTerm","Helmet","onSubmit","onChange","placeholder","value","map","movie","poster_path","vote_average","release_date","show","original_name","first_air_date","SearchContainer","state","event","preventDefault","searchByTerm","target","setState","a","data","results","this","React","Component","TVPresenter","topRated","popular","airingToday","TVContainer","HomePresenter","nowPlaying","upcoming","HomeContainer","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","original_title","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","_","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a1e976.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 2px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.2s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HeaderComponent = ({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\n\r\nexport default withRouter(HeaderComponent);\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"f226505f85b5d1d1143246ffb7315101\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: { append_to_response: \"videos\" },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: { query: encodeURIComponent(term) },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: { append_to_response: \"videos\" },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: { query: encodeURIComponent(term) },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      🍜\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(prop) => prop.bgUrl});\r\n  background-size: cover;\r\n  height: 180px;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n      transition: opacity 0.1s linear;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  font-size: 12px;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  yaer: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"./../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        onChange={updateTerm}\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text={`Nothing Found`} color=\"#95a5a6\"></Message>\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({ movieResults, tvResults });\r\n    } catch (error) {\r\n      this.setState({ error: \"Can't find information\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"Cannot find TV Information\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({ nowPlaying, upcoming, popular });\r\n    } catch {\r\n      this.setState({ error: \"Cannot find movie info\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"./../../Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 60%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.original_title ?? result.original_name} | Nomflix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(`../../assets/noPosterSmall.png`).default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.original_title ?? result.original_name}</Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {(result.release_date ?? result.first_air_date).substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>{result.runtime ?? result.episode_run_time[0]} min</Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class HomeContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result;\r\n    try {\r\n      if (isMovie) {\r\n        result = (await moviesApi.movieDetail(parsedId)).data;\r\n      } else {\r\n        result = (await tvApi.showDetail(parsedId)).data;\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Home from \"Routes/Home\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nconst _ = () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/tv/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default _;\r\n","import reset from \"styled-reset\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 14px;\r\n        background-color: rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top: 50px\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}